Форматы записи чисел
D = .число // пример D202 или d202 или .202
B = Bчисло // пример B00000101 или B101 или b101
H = Hчисло // пример H03A или H3A или h3A или 0x03A или 0x3A

Директивы и команды ASM Pic
W - аккумулятор
F - регистр 
D - селектор
B - номер бита в регистре
K - const

Флаги
(в скобках номера битов в регистре STATUS)
- флаг Z (второй бит) - флаг нулевого результата
- флаг С (нулевой бит) - флаг переноса-займа

EQU - машинным числам определяет человеческие имена
пример: 
;адреса селектора
W          EQU         0x0
F          EQU         0x1

;адреса регистров
STATUS	EQU	H0003

;адреса номера битов в регистрах
C       EQU       H0000  ; определяем номер бита для флага C
Z       EQU       H0002  ; определяем номер бита для флага Z

Сброс сторожевого таймера
CLRWDT

Установка ввода/вывода с помощью TRIS
Установка логического сигнала с помощью PORT

Одна команда выполняется в 4 такта
Команды переходы выполняются за два машинных цикла

NOP - команда пустышка = 1мкс при частоте кварца 4МГц
1000000 машинных циклов = 1сек

Сложение и вычитание РЕГИСТРОВ;
ADDWF F,D (F+W)
SUBWF F,D (F-W) <- важно последовательность

Установка бита в ноль или единицу
BSF F,B - установка бита (в 1)
BCF F,B - обнуление бита (в 0)

Взаимодействие с аккумулятором (W)
MOVF F,W - копировать из F в W
MOVLW K - копировать обычное число (константу) В W
MOVWF F - копировать ИЗ W в F

Сложение и вычитание КОНСТАНТ (чисел)
ADDLW K - прибавление числа из W (K+W)
SUBLW K - из K вычесть число W (K-W)
работа (ответ) помещается в W

Очистка регистров 
CLRF F - очистка регистра F
CLRW - очистка аккумулятора (W)

Пустышки и метки
NOP - команда пустышка (задержка, такт)
Metka1 CLRW - метка с командой 
(памятка: можно без меток устанавливать PSL регистр аппаратного счетчика ставить на нужную команду)

Команды переходов
GOTO METKA - переход на метку
CALL METKA - спецпереход на метку
RETLW K - возврат к спецпереходу вставляя в W (аккумулятор) число
RETURN - возврат к спецпереходу (простой)

Команды счётчики
INCF F,D - увеличение на единицу регистра F, результат сохранить в зависимости от селектора (D)
DECF F,D - уменьшение на единицу регистра F, результат сохранить в зависимости от селектора (D)

Переход по событиям в счётчиках 
INCFSZ F,D - (работа с переполнением) если результат после увеличения равен 0, то пропуск след команды
DECFSZ F,D - если результат после уменьшения равен 0, то пропуск след команды

Переход по результатам БИТ-проверки
BTFSC F,B - F это регистр а B это номер бита в регистре. Если В=1 то выполняется след. инструкция.
BTFSS F,B - F это регистр а B это номер бита в регистре. Если В=0 то выполняется след. инструкция.

Флаги как индикаторы событий

;проверка на факт ПЕРЕНОСА (переполнения)
 BCF       STATUS,C ; опускаем флаг C в ноль
;... операции увеличения каких либо регистров <- тут суть
        BTFSS     STATUS,C ; делаем бит-проверку C-флага
; если бит C=0, то выполняется следующая инструкция
; если бит C=1, то следующая инструкция пропускается
; ============================================================
Установка флага из нуля в единицу подтверждает факт переноса.

;проверка на факт ЗАЙМА
        BSF       STATUS,C ; поднимаем флаг C в единицу
;... операции уменьшения каких либо регистров
        BTFSC     STATUS,C ; делаем бит-проверку C-флага
; если бит C=1, то выполняется следующая инструкция
; если бит C=0, то следующая инструкция пропускается
; ============================================================
Установка флага из единицы в ноль подтверждает факт займа.

;проверка на равенство нулю
CLRF      KLOP     ; обнулим регистр KLOP
        BCF       STATUS,Z ; опустим флаг Z в ноль
		>> полезный код >>
        MOVF      KLOP,F   ; копировать из KLOP в KLOP
        BTFSC     STATUS,Z ; делаем бит-проверку Z-флага на наличие единицы
; если Z=1, KLOP = 0, то выполнение последующей инструкции, иначе если KLOP не равен нулю то пропуск
; ============================================================

Команды сравнения
XORWF F,D - проверка на равенство одного регистра другому регистру (сначала ввести регистр в аккумулятор MOVF CLOP,W)
результат в Z-флаге (BTFSC STATUS,Z), если Z=1 то вып. след. инструкция

XORLW K - проверка на равенство константы какому либо регистру (сначала ввести регистр в аккумулятор)
результат в Z-флаге (BTFSC STATUS,Z), если Z=1 то вып. след. инструкция

Команда сдвига битов в регистре
работа с битом C(STATUS)
RRF F,D - сдвиг вправо в регистре
RLF F,D - сдвиг влево в регистре 
При работе с этой командой необходимо сначала определить состояние бита C в регистре STATUS, 
а затем выполнять соответствующий сдвиг. Это позволит вам однозначно знать содержимое сдвигаемого регистра после процедуры сдвига.

Косвенная адресация
Для работы с косвенной адресацией используется регистр специального назначения FSR и физически не реализованный регистр INDF.
Принцип работы простой, в регистр FSR записываем адрес какого-либо регистра, пусть это будет регистр с названием temp (то есть адресу этого регистра присвоено название temp с помощью директивы equ),
после чего содержимое регистра temp “условно” оказывается в регистре INDF.
Теперь все операции, проделанные над регистром INDF, будут выполнены и для регистра temp,
на самом же деле обращение к регистру INDF вызовет действие непосредственно с регистром temp, поэтому я и употребил термин “условно”.